@import "tailwindcss";

.grid-background {
	position: absolute; /* Apne parent ke andar hi */
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: linear-gradient(
		135deg,
		rgba(255, 255, 255, 0.02),
		rgba(0, 0, 0, 0.02)
	);
	z-index: -1; /* Sabke peeche */
}

/* Yeh pseudo-element hai jo .grid-background ke upar ek aur layer bana raha hai: */
.grid-background::before {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: radial-gradient(circle, transparent, rgba(0, 0, 0, 0.9));
}

/* 
Agar ye radial gradient normal .grid-background me hi lagate, to dono gradients mix ho jaate aur grid pattern dikhai nahi deta.

Isliye pseudo-element (::before) ka use kiya:
    Alag layer create hoti hai.
    Grid pattern aur radial overlay alag alag maintain hote hain.
    Overlay ke transparency se niche wali grid visible rehti hai.
*/
.hero-image-wrapper {
	perspective: 1200px;
	perspective-origin: 50% 30%;
}

.hero-image {
	transform: rotateX(10deg) scale(1);
	transition: transform 0.7s cubic-bezier(0.22, 1, 0.36, 1),
		box-shadow 0.4s cubic-bezier(0.22, 1, 0.36, 1);
	will-change: transform, box-shadow;
	box-shadow: 0 8px 32px 0 rgba(80, 60, 180, 0.18);
}

.hero-image.scrolled {
	/* More subtle and impressive 3D effect, better scaling, smooth translation */
	transform: rotateX(-12deg) scale(1.08) translateY(32px);
	box-shadow: 0 16px 48px 0 rgba(140, 90, 255, 0.3);
}

/* Optional: Add a hover for additional interactivity */
.hero-image-wrapper:hover .hero-image {
	transform: rotateX(0deg) scale(1.12) translateY(-4px);
	box-shadow: 0 18px 56px 0 rgba(140, 90, 255, 0.34);
	transition: transform 0.5s, box-shadow 0.4s;
}
